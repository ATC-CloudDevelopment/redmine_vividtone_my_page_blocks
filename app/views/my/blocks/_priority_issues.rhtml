<h3><%= l(:label_priority_issues) %>

<%
  open_issues = Issue.visible.open
  today = Date.today
  current_user_id = User.current.id

  due_today_issues = open_issues.find(:all,
    :conditions => {
      :assigned_to_id => current_user_id,
      :due_date => Date.today,
    },
    :include => [:status, :project, :tracker, :priority],
    :order => "#{Project.table_name}.id")

  overdue_issues = open_issues.find(:all,
    :conditions => [
      "assigned_to_id = ? and due_date < ?",
      current_user_id,
      today,
    ],
    :include => [:status, :project, :tracker, :priority],
    :order => "due_date")

  default_priority = IssuePriority.find_by_is_default(true)
  if default_priority
    higher_priority_issues = open_issues.find(:all,
      :conditions => [
        "assigned_to_id = ? and #{IssuePriority.table_name}.position > ?",
        current_user_id,
        default_priority.position
      ],
      :include => [:status, :project, :tracker, :priority],
      :order => "#{IssuePriority.table_name}.position desc, due_date")
  else
    higher_priority_issues = []
  end

  near_due_issues = open_issues.find(:all,
    :conditions => [
      "assigned_to_id = ? and ? < due_date and due_date <= ?",
      current_user_id,
      today,
      today + 7
    ],
    :include => [:status, :project, :tracker, :priority],
    :order => "due_date")
%>

<h4><%= l(:label_higher_priority_issues) %> (<%= higher_priority_issues.count %>)</h4>
  <%= render :partial => 'issues/list_simple', :locals => {:issues => higher_priority_issues} unless higher_priority_issues.empty? %>

<h4><%= l(:label_overdue_issues) %> (<%= overdue_issues.count %>)</h4>
<%= render :partial => 'issues/list_simple', :locals => {:issues => overdue_issues} unless overdue_issues.empty? %>

<h4><%= l(:label_due_today_issues) %> (<%= due_today_issues.count %>)</h4>
<%= render :partial => 'issues/list_simple', :locals => {:issues => due_today_issues}  unless due_today_issues.empty? %>

<h4><%= l(:label_near_due_issues) %> (<%= near_due_issues.count %>)</h4>
<%= render :partial => 'issues/list_simple', :locals => {:issues => near_due_issues} unless near_due_issues.empty? %>
